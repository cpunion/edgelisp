-*- outline -*-

* Special forms

** lambda

(lambda lambda-list body)

lambda-list: a list of symbols
body: a form

** apply

(apply fun &rest args)

fun: a function, evaluated
args: arguments, each evaluated

** defun

(defun name lambda-list body)

name: a symbol
lambda-list: a list of symbols
body: a form

** function

(function name)

name: a symbol

** defclass

(defclass name &rest member_names)

name: symbol
member_names: a list of symbols

*** Description

Creates a class and binds it in the global environment.

** def

(def name ((class instance) &rest params) body)

name: a symbol
class: a form, evaluated
instance: a symbol
params: a list of symbols
body: a form

*** Description

Binds the method in the class' vtable and (re-)defines a generic
function with the given name, that calls the method.

** new

(new class)

class: a form, evaluated

*** Description

Creates a new instance of a class

** set

(set name value)

name: a symbol
value: a form, evaluated

** finally

(finally protected-form cleanup-form)

** throw

(throw exception)

exception: a form, evaluated

** with-handlers

(with-handlers handlers body)

handlers is a list of (class function) pairs

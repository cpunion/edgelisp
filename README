EdgeLisp is a Lisp for JavaScript.

Contact
-------

EdgeLisp is developed by Manuel Simoni <msimoni@gmail.com>

Features
--------

* Class-based object system
  (currently only single inheritance)

* Multiple-dispatching generic functions
  (using Cecil-style symmetric method lookup)

* Separate function and variable namespaces (Lisp-2)

* &OPTIONAL, &KEY, &REST, &AUX parameters
  as well as &ALL-KEYS receiving keyword args as dictionary

* Runtime type-checked function parameters and results
  (using same syntax as DEFMETHOD)

* Nonlocal exits (BLOCK/RETURN-FROM, CATCH/THROW),
  UNWIND-PROTECT

* Condition system with restarts

* Numerical tower: real, rational, integer
  (small integers are represented as Number)

* Hygienic DEFMACRO (based on SRFI 72)

* Slot access through (overridable) generic functions;
  slots may be defined outside classes, like methods.

* (Slightly) Generalized references

* Inline JavaScript, with escaping back into Lisp, (and back into JS...)
  using #{ ... JavaScript code ... #} reader syntax.

Features TBD
------------

* Multiple inheritance
* Sequence protocol based on D's ranges
* call-next-method; before-, after-, around-methods

Plan
----

* Implement missing features
* Documentation and better test suite
* Make faster, smaller

Compatibility
-------------

EdgeLisp is intended to compile to EMCAScript, 3rd Edition (JavaScript
1.5), but currently uses the nonstandard extensions __proto__ (for
inheritance) and function.caller (for debugging).

License
-------

If you modify EdgeLisp, you must make the modified version available
to your users under the AGPL.  See file COPYING.

(Using EdgeLisp for your programs does not place them under the AGPL.
You are free to choose any license for your Lisp code.)

Thanks
------

* Chris Double for parsing expression grammar
  https://github.com/doublec/jsparse
* Douglas Crockford for JSON parser
  https://github.com/douglascrockford/JSON-js
* Danny Yoo for numerical tower
  https://github.com/dyoo/js-numbers
